
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <..\..\_impl\include\frc\drive\RobotDriveBase.h>

#include <frc/SpeedController.h>
#include <wpi/SmallString.h>




#include <rpygen/frc__MotorSafety.hpp>

namespace rpygen {

using namespace frc;


template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
using PyBasefrc__RobotDriveBase = 
    Pyfrc__MotorSafety<
        PyTrampolineBase
    
    , CxxBase
    >
;

template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
struct Pyfrc__RobotDriveBase : PyBasefrc__RobotDriveBase<PyTrampolineBase, CxxBase> {
    using PyBasefrc__RobotDriveBase<PyTrampolineBase, CxxBase>::PyBasefrc__RobotDriveBase;



#ifndef RPYGEN_DISABLE_StopMotor_v
    void StopMotor() override {
RPYBUILD_OVERRIDE_PURE_NAME(RobotDriveBase,PYBIND11_TYPE(void), CxxBase, "stopMotor", StopMotor,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetDescription_RTraw_ostream
    void GetDescription(wpi::raw_ostream& desc) const override {
        auto custom_fn = [&](py::function &overload) {
  desc << py::cast<std::string>(overload());
}
;
        RPYBUILD_OVERRIDE_PURE_CUSTOM_NAME(RobotDriveBase,PYBIND11_TYPE(void), CxxBase, "getDescription", GetDescription,desc);    }
#endif


#ifndef RPYBLD_DISABLE_ApplyDeadband_d_d
  #ifndef RPYBLD_UDISABLE_frc__RobotDriveBase_ApplyDeadband
    using frc::RobotDriveBase::ApplyDeadband;
    #define RPYBLD_UDISABLE_frc__RobotDriveBase_ApplyDeadband
  #endif
#endif

    using frc::RobotDriveBase::m_deadband;
    using frc::RobotDriveBase::m_maxOutput;

};

}; // namespace rpygen
