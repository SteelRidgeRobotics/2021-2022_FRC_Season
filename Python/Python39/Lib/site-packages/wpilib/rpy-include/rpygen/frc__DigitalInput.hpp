
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <..\_impl\include\frc\DigitalInput.h>

#include <frc/smartdashboard/SendableBuilder.h>
#include <frc/DigitalGlitchFilter.h>




#include <rpygen/frc__DigitalSource.hpp>
#include <rpygen/frc__Sendable.hpp>

namespace rpygen {

using namespace frc;


template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
using PyBasefrc__DigitalInput = 
    Pyfrc__DigitalSource<
    Pyfrc__Sendable<
        PyTrampolineBase
    
    , CxxBase
    >
    
    , CxxBase
    >
;

template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
struct Pyfrc__DigitalInput : PyBasefrc__DigitalInput<PyTrampolineBase, CxxBase> {
    using PyBasefrc__DigitalInput<PyTrampolineBase, CxxBase>::PyBasefrc__DigitalInput;



#ifndef RPYGEN_DISABLE_KGetPortHandleForRouting_v
    HAL_Handle GetPortHandleForRouting() const override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(HAL_Handle), CxxBase, "getPortHandleForRouting", GetPortHandleForRouting,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetAnalogTriggerTypeForRouting_v
    AnalogTriggerType GetAnalogTriggerTypeForRouting() const override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(AnalogTriggerType), CxxBase, "getAnalogTriggerTypeForRouting", GetAnalogTriggerTypeForRouting,);    }
#endif

#ifndef RPYGEN_DISABLE_KIsAnalogTrigger_v
    bool IsAnalogTrigger() const override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(bool), CxxBase, "isAnalogTrigger", IsAnalogTrigger,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetChannel_v
    int GetChannel() const override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(int), CxxBase, "getChannel", GetChannel,);    }
#endif

#ifndef RPYGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(frc::SendableBuilder& builder) override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "initSendable", InitSendable,builder);    }
#endif




};

}; // namespace rpygen
