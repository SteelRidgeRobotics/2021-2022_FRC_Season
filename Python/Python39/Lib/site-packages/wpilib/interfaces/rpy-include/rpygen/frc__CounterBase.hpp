
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <..\..\_impl\include\frc\CounterBase.h>






namespace rpygen {

using namespace frc;


template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
struct Pyfrc__CounterBase : PyTrampolineBase {
    using PyTrampolineBase::PyTrampolineBase;



#ifndef RPYGEN_DISABLE_KGet_v
    int Get() const override {
RPYBUILD_OVERRIDE_PURE_NAME(CounterBase,PYBIND11_TYPE(int), CxxBase, "get", Get,);    }
#endif

#ifndef RPYGEN_DISABLE_Reset_v
    void Reset() override {
RPYBUILD_OVERRIDE_PURE_NAME(CounterBase,PYBIND11_TYPE(void), CxxBase, "reset", Reset,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetPeriod_v
    double GetPeriod() const override {
RPYBUILD_OVERRIDE_PURE_NAME(CounterBase,PYBIND11_TYPE(double), CxxBase, "getPeriod", GetPeriod,);    }
#endif

#ifndef RPYGEN_DISABLE_SetMaxPeriod_d
    void SetMaxPeriod(double maxPeriod) override {
RPYBUILD_OVERRIDE_PURE_NAME(CounterBase,PYBIND11_TYPE(void), CxxBase, "setMaxPeriod", SetMaxPeriod,maxPeriod);    }
#endif

#ifndef RPYGEN_DISABLE_KGetStopped_v
    bool GetStopped() const override {
RPYBUILD_OVERRIDE_PURE_NAME(CounterBase,PYBIND11_TYPE(bool), CxxBase, "getStopped", GetStopped,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetDirection_v
    bool GetDirection() const override {
RPYBUILD_OVERRIDE_PURE_NAME(CounterBase,PYBIND11_TYPE(bool), CxxBase, "getDirection", GetDirection,);    }
#endif




};

}; // namespace rpygen
